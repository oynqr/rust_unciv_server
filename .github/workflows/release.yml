name: Release build

on:
  release:
    types: [created]

env:
  CROSS_CONTAINER_ENGINE: podman

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            "aarch64-apple-darwin",
            "aarch64-linux-android",
            "aarch64-unknown-linux-musl",
            "arm-unknown-linux-musleabi",
            "arm-unknown-linux-musleabihf",
            "armv5te-unknown-linux-musleabi",
            "armv7-unknown-linux-musleabi",
            "armv7-unknown-linux-musleabihf",
            "i586-unknown-linux-musl",
            "i686-pc-windows-gnu",
            "i686-unknown-freebsd",
            "i686-unknown-linux-musl",
            "mips64el-unknown-linux-gnuabi64",
            "mips64-unknown-linux-gnuabi64",
            "mipsel-unknown-linux-musl",
            "mips-unknown-linux-musl",
            "powerpc64le-unknown-linux-gnu",
            "powerpc64-unknown-linux-gnu",
            "powerpc-unknown-linux-gnu",
            "riscv64gc-unknown-linux-gnu",
            "s390x-unknown-linux-gnu",
            "sparc64-unknown-linux-gnu",
            "x86_64-apple-darwin",
            "x86_64-linux-android",
            "x86_64-pc-windows-gnu",
            "x86_64-unknown-freebsd",
            "x86_64-unknown-linux-musl",
            "x86_64-unknown-netbsd",
          ]
        include:
          - runner: "ubuntu-22.04"
          - toolchain: "stable"
          - buildFlags: "--release"
          - target: "aarch64-apple-darwin"
            runner: "macos-12"
          - target: "x86_64-apple-darwin"
            runner: "macos-12"

    runs-on: ${{matrix.runner}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{runner.os}}-cargo-${{hashFiles('**/Cargo.lock')}}
      - name: Install cargo tools
        id: cargo-tools
        run: |
          cargo install rust-latest || echo rust-latest already installed
          cargo install cross --git https://github.com/cross-rs/cross || echo cross already installed
          echo "::set-output name=rust-latest::$(rust-latest)"
        shell: bash
      - uses: actions/cache@v3
        with:
          path: ~/.rustup/
          key: ${{matrix.target}}-rustup-${{steps.cargo-tools.outputs.rust-latest}}
      - name: Setup rust
        run: |
          rustup set profile minimal
          rustup toolchain install ${{matrix.toolchain}}
          rustup default ${{matrix.toolchain}}
          cargo install cross --git https://github.com/cross-rs/cross
      - name: Install cross toolchain on macOS
        if: runner.os == 'macOS'
        run: |
          rustup target add ${{matrix.target}}
      - name: Build
        run: |
          cross build ${{matrix.buildFlags}} --target ${{matrix.target}}
      - name: Create tar
        run: |
          mkdir assets
          FILENAME=rust_unciv_server-${{matrix.target}}.tar
          shopt -s extglob
          mv target/${{matrix.target}}/release/rust_unciv_server?(.exe) assets
          cd assets
          tar --format=ustar -cf $FILENAME rust_unciv_server?(.exe)
          rm rust_unciv_server?(.exe)
          shopt -u extglob
          zstd -19 --rm $FILENAME
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: assets/*
